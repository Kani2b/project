pipeline {
tools {
maven 'Maven3'
}
agent any
environment {
registry = "919147823021.dkr.ecr.eu-north-1.amazonaws.com/project"
}
stages {
stage('Cloning Git') {
steps {
checkout([$class: 'GitSCM', branches: [[name: '*/master']],
doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [],
userRemoteConfigs: [[credentialsId: '', url: 'https://github.com/Kani2b/project.git']]])
}
}
stage ('Build') {
steps {
sh 'mvn clean install'
}
}

// Building Docker images
stage('Building image') {
steps{
script {
dockerImage = docker.build registry
}
}
}
// Uploading Docker images into AWS ECR
stage('Pushing to ECR') {
steps{
script {
sh 'aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 919147823021.dkr.ecr.eu-north-1.amazonaws.com'
sh 'docker push 919147823021.dkr.ecr.eu-north-1.amazonaws.com/project:latest'
}
}
}
stage('K8S Deploy') {
steps{
script {
withKubeConfig([credentialsId: 'K8S', serverUrl: '']) {
sh ('kubectl apply -f eks-deploy-k8s.yaml')
sh ('kubectl apply -f statefulset.yaml')
}
}
}
}
}
}
